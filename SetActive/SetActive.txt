
SetActive Activates/Deactivates the GameObject, depending on the given true or false value.

		gameObject.SetActive()

Ex:

1. Define a game object and assign a reference to it. 

		public Toggle t1;

2. In Update() or your custom function,

        t1.gameObject.SetActive(false);

Note: Using t1.SetActive will not work. Hierarchy needs to be followed.

To check if the object is active or inactive:

1. enabled
2. activeInHierarchy

 if(t1.enabled==false)
        {
            t1.gameObject.SetActive(true);
        }
 
 or we can use

  if(t1.gameObject.activeInHierarchy == true)
        {
            t1.gameObject.SetActive(false);
        }
